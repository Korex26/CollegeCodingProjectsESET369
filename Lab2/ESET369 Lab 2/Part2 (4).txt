;-------------------------------------------------------------------------------
; MSP430 Assembler Code Template for use with TI Code Composer Studio
;
;
;-------------------------------------------------------------------------------
            .cdecls C,LIST,"msp430.h"       ; Include device header file
            
;-------------------------------------------------------------------------------
            .def    RESET                   ; Export program entry-point to
                                            ; make it known to linker.
;-------------------------------------------------------------------------------
            .text                           ; Assemble into program memory.
            .retain                         ; Override ELF conditional linking
                                            ; and retain current section.
            .retainrefs                     ; And retain any sections that have
                                            ; references to current section.

;-------------------------------------------------------------------------------
RESET       mov.w   #__STACK_END,SP         ; Initialize stackpointer
StopWDT     mov.w   #WDTPW|WDTHOLD,&WDTCTL  ; Stop watchdog timer

;-------------------------------------------------------------------------------
; Initialization
;-------------------------------------------------------------------------------
            bic.b   #LOCKLPM5, &PM5CTL0     ; Clear LOCKLPM5 bit to enable GPIO
            bis.b   #0x03, &P3DIR           ; Set P3.0 and P3.1 as output
            bic.b   #0x03, &P3OUT           ; Ensure LEDs start OFF

            bic.b   #0x01, &P6DIR           ; Set P6.0 as input
            bis.b   #0x01, &P6REN           ; Enable pull-up/pull-down resistor
            bis.b   #0x01, &P6OUT           ; Configure pull-up (button idle HIGH)

;-------------------------------------------------------------------------------
; Main loop
;-------------------------------------------------------------------------------
_loop:
            bit.b   #0x01, &P6IN            ; Check if button (P6.0) is pressed
            jne     _leds_off               ; If not pressed, turn LEDs off

            mov.w   #0xF400, R10            ; R10 <- 0xF400 (delay)
_lp1:
            dec.w   R10                     ; Decrement R10
            cmp.w   #0x00, R10              ; Compare with 0
            jne     _lp1                    ; Conditional branch

            xor.b   #0x03, &P3OUT           ; Toggle P3.0 and P3.1
            jmp     _loop                   ; Repeat

_leds_off:
            bic.b   #0x00, &P3OUT           ; Turn LEDs off
            jmp     _loop                   ; Check button state again

            nop

;-------------------------------------------------------------------------------
; Stack Pointer definition
;-------------------------------------------------------------------------------
            .global __STACK_END
            .sect   .stack
            
;-------------------------------------------------------------------------------
; Interrupt Vectors
;-------------------------------------------------------------------------------
            .sect   ".reset"                ; MSP430 RESET Vector
            .short  RESET
